#!/bin/sh

. "/mnt/SDCARD/.tmp_update/scripts/helperFunctions.sh"

INFO_DIR="/mnt/SDCARD/RetroArch/.retroarch/cores"
DEFAULT_IMG="/mnt/SDCARD/Themes/SPRUCE/icons/ports.png"

FLAG_FILE="/mnt/SDCARD/.tmp_update/flags/gs.lock"
LIST_FILE="/mnt/SDCARD/.tmp_update/flags/gs_list"
TEMP_FILE="/mnt/SDCARD/.tmp_update/flags/gs_list_temp"
LONG_PRESSED=false

long_press_handler() {
    # if in game now
    if [ -f /tmp/cmd_to_run.sh ] ; then

        # set flag for long pressed event
        LONG_PRESSED=false
        sleep 2
        LONG_PRESSED=true
        
        # get game path
        CMD=`cat /tmp/cmd_to_run.sh`

        # update switcher game list
        if [ -f "$LIST_FILE" ] ; then
            # if game list file exists
            # get all commands except the current game
            grep -Fxv "$CMD" "$LIST_FILE" > "$TEMP_FILE"
            mv "$TEMP_FILE" "$LIST_FILE"
            # append the command for current game to the end of game list file 
            echo "$CMD" >> "$LIST_FILE"
        else
            # if game list file does not exist
            # put command to new game list file
            echo "$CMD" > "$LIST_FILE"
        fi

    # if in MainUI menu
    elif pgrep -x "./MainUI" > /dev/null ; then

        # set flag to ignore long pressed cancelation
        LONG_PRESSED=true

        # exit if list file does not exist
        if [ ! -f "$LIST_FILE" ] ; then
            return 0
        fi

    # otherwise other program is running, exit normally
    else
        return 0
    fi

    # makesure all emulators and games in list exist
    # remove all non existing games from list file
    rm -f "$TEMP_FILE"
    while read -r CMD; do
        EMU_PATH=`echo $CMD | cut -d\" -f2`
        GAME_PATH=`echo $CMD | cut -d\" -f4`
        if [ ! -f "$EMU_PATH" ] ; then continue ; fi
        if [ ! -f "$GAME_PATH" ] ; then continue ; fi
        echo "$CMD" >> "$TEMP_FILE"
    done <$LIST_FILE
    mv "$TEMP_FILE" "$LIST_FILE"

    # trim the game list to only recent 10 games
    tail -10 "$LIST_FILE" > "$TEMP_FILE"
    mv "$TEMP_FILE" "$LIST_FILE"

    # kill RA or other emulator or MainUI
    killall -15 retroarch || killall -15 ra32.miyoo || killall -9 MainUI || /mnt/SDCARD/miyoo/app/kill_apps.sh
    
    # set flag file for principal.sh to load game switcher later
    touch "$FLAG_FILE" && log_message "creating game switcher flag file"
}

# listen to log file and handle key press events
# the keypress logs are generated by keymon
tail -F -n 1 /var/log/messages | while read line; do
    case $line in
        *"key 1 28 1"*) # START key down
            # start long press handler
            log_message "game switcher watchdog: Start button pressed"
            long_press_handler &
            PID=$!
        ;;
        *"key 1 28 0"*) # START key up
            # kill the long press handler if 
            # menu button is released within time limit
            # and is in game now
            if [ "$LONG_PRESSED" = false ] && [ -f /tmp/cmd_to_run.sh ] ; then
                log_message "game switcher watchdog: Start button released."
                kill $PID
            fi
        ;;
    esac
done 
