name: Create Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create release from'
        required: true
        default: 'Development'
        type: string
      publish:
        description: 'Update OTA files immediately'
        required: true
        default: 'false'
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Install 7zip
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full

      - name: Get version
        id: get_version
        run: |
          if [ ! -f "spruce/spruce" ]; then
            echo "Error: spruce/spruce file not found"
            exit 1
          fi
          echo "version=$(cat spruce/spruce)" >> "$GITHUB_OUTPUT"
          # Get last commit hash and save to file
          git rev-parse HEAD > commit_hash.txt

      - name: Create archives
        run: |
          # Create 7z archive
          7z a -t7z -mx=9 "spruceV${{ steps.get_version.outputs.version }}.7z" * .tmp_update \
            -xr!.git \
            -xr!.github \
            -x!.gitignore \
            -x!.gitattributes \
            -x!create_spruce_release.bat \
            -x!create_spruce_release.sh \
            -x!commit_hash.txt \
            -x!spruce/flags/developer_mode \
            -x!spruce/flags/developer_mode.lock
          7z u "spruceV${{ steps.get_version.outputs.version }}.7z" commit_hash.txt

          # Create zip archive with same exclusions plus the 7z file
          7z a -tzip "spruceV${{ steps.get_version.outputs.version }}.zip" * .tmp_update \
            -xr!.git \
            -xr!.github \
            -x!.gitignore \
            -x!.gitattributes \
            -x!create_spruce_release.bat \
            -x!create_spruce_release.sh \
            -x!commit_hash.txt \
            -x!spruce/flags/developer_mode \
            -x!spruce/flags/developer_mode.lock \
            -x!"spruceV${{ steps.get_version.outputs.version }}.7z"
          7z u "spruceV${{ steps.get_version.outputs.version }}.zip" commit_hash.txt

          # Clone AutoUpdater repo and create EZ Updater bundle
          git clone https://github.com/spruceUI/AutoUpdater.git
          cp "spruceV${{ steps.get_version.outputs.version }}.7z" AutoUpdater/
          7z a -tzip "EZ.Updater.spruceV${{ steps.get_version.outputs.version }}.zip" ./AutoUpdater/* \
            -xr!.git \
            -xr!.github \
            -x!.gitignore \
            -x!.gitattributes

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          files: |
            EZ.Updater.spruceV${{ steps.get_version.outputs.version }}.zip
            spruceV${{ steps.get_version.outputs.version }}.7z
            spruceV${{ steps.get_version.outputs.version }}.zip
          tag_name: v${{ steps.get_version.outputs.version }}
          body: |
          
            Spruce v${{ steps.get_version.outputs.version }}
            ******

            Check out our repo of various [free games and ports](https://github.com/spruceUI/Ports-and-Free-Games/releases/latest)!

            ******
            ## Changes/Additions:
            - Some new things

            ## Bug Fixes/Removals:
            - Fixed some bugs

            ******

            ## Updating

            *****

            [Fresh Install instructions](https://github.com/spruceUI/spruceOS/wiki/Installation-Instructions)

            *****

            [Update from 3.0.0 or newer instructions](https://github.com/spruceUI/spruceOS/wiki/Updating-to-the-Latest-Release#ez-updater-for-spruce-vversions-300-and-above)

            *****

            [Update from pre-3.0.0 instructions](https://github.com/spruceUI/spruceOS/wiki/Updating-to-the-Latest-Release#ez-updater-for-spruce--versions-230-and-below)

            *****


            Credits/Thanks
          repository: spruceUI/spruceOS
          token: ${{ secrets.PAT_TOKEN }}
          draft: true
          prerelease: true

      - name: Update OTA files
        # Only run this step if the release is published immediately
        if: success() && github.event.inputs.publish == 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Clone both repositories
          git clone https://github.com/spruceUI/spruceui.github.io.git ota_repo
          git clone https://github.com/spruceUI/spruceSource.git mirror_repo
          
          # Calculate file info
          CHECKSUM=$(md5sum "spruceV${{ steps.get_version.outputs.version }}.7z" | cut -d' ' -f1)
          SIZE_MB=$(ls -l --block-size=1M "spruceV${{ steps.get_version.outputs.version }}.7z" | awk '{print $5}')
          
          # Function to update OTA file
          update_ota_file() {
            local file="$1"
            local content
            content=$(cat "$file")
            
            echo "$content" | grep -v "^RELEASE_" > "$file"
            echo "RELEASE_VERSION=${{ steps.get_version.outputs.version }}" >> "$file"
            echo "RELEASE_CHECKSUM=$CHECKSUM" >> "$file"
            echo "RELEASE_SIZE_IN_MB=$SIZE_MB" >> "$file"
            echo "RELEASE_LINK=https://github.com/spruceUI/spruceOS/releases/download/v${{ steps.get_version.outputs.version }}/spruceV${{ steps.get_version.outputs.version }}.7z" >> "$file"
            echo "RELEASE_INFO=https://github.com/spruceUI/spruceOS/releases/tag/v${{ steps.get_version.outputs.version }}" >> "$file"
          }
          
          # Update main OTA file
          update_ota_file "ota_repo/OTA/spruce"
          
          # Update mirror OTA file
          update_ota_file "mirror_repo/OTA/spruce"
          
          # Push changes to main repo
          cd ota_repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add OTA/spruce
          git commit -m "Update release to ${{ steps.get_version.outputs.version }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/spruceUI/spruceui.github.io.git main
          
          # Push changes to mirror repo
          cd ../mirror_repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add OTA/spruce
          git commit -m "Update release to ${{ steps.get_version.outputs.version }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/spruceUI/spruceSource.git main